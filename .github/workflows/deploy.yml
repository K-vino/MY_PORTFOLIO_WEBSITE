name: Deploy Portfolio

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: |
        # Add linting when available
        echo "Linting step - add ESLint configuration if needed"
    
    - name: Check for security vulnerabilities
      run: npm audit --audit-level=high
    
    - name: Validate package.json
      run: npm ls --depth=0

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create production build
      run: |
        echo "Production build step"
        # Add any build steps here if needed
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: portfolio-build
        path: |
          client/
          server/
          package.json
          package-lock.json
          README.md
          DEPLOYMENT.md

  deploy-render:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to Render
      run: |
        echo "Render deployment is automatic on push to main branch"
        echo "Make sure your Render service is connected to this repository"
        echo "Deployment URL will be available in Render dashboard"

  deploy-railway:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && false  # Disabled by default
    
    steps:
    - name: Deploy to Railway
      run: |
        echo "Railway deployment is automatic on push to main branch"
        echo "Make sure your Railway project is connected to this repository"

  notify:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.build.result }}" == "success" ]; then
          echo "✅ Deployment pipeline completed successfully"
        else
          echo "❌ Deployment pipeline failed"
          exit 1
        fi
